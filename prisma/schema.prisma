// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  fullName String
  phone    String @unique
  address  String?
  role     RoleList @default(USER)

  token     String? @unique
  Booked   Booked[]
}

model Config {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  avatar      String
  description String
}

model LinkTree {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  username String
  url      String
  icon     String
  order    Int
}

model GroupSchedule {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  label     String
  order     Int
  schedules Schedule[]
}

model Schedule {
  id       String        @id @default(auto()) @map("_id") @db.ObjectId
  label    String
  duration Int
  description String[] @default([])
  price    Int
  groupId  String        @db.ObjectId
  group    GroupSchedule @relation(fields: [groupId], references: [id])

  calendars Calendar[]
}

model Calendar {
  id     String         @id @default(auto()) @map("_id") @db.ObjectId
  date   DateTime
  time   String
  kelas  String
  status CalendarStatus

  scheduleId String   @db.ObjectId
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  Booked Booked[]
}

model Booked {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  calendarId String   @db.ObjectId
  reason     String?
  calendar   Calendar @relation(fields: [calendarId], references: [id])
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum RoleList {
  USER
  ADMIN
}

enum CalendarStatus {
  Finish
  Active
  Booked
}
